package ui

import "TorPlayer2/i18n"
import "TorPlayer2/setting"
import "TorPlayer2/handler/uri"

templ Settings(settings setting.Settings) {
	@layout(i18n.MustT(ctx, "Settings.Title")) {
		<main class="box-border px-8 py-2">
			<div class="border-b border-gray-400 pb-8 pt-4">
				<h1 class="text-2xl font-bold">{ i18n.T(ctx, "Settings.Title") }</h1>
			</div>
			<div>
				<div class="mt-4 border-b border-gray-400">
					<div class="my-4 grid grid-cols-2">
						<div>
							<h2 class="text-lg font-semibold leading-4">Language</h2>
							<p class="">
								NgÃ´n ngá»¯ hiá»ƒn thá»‹ cá»§a á»©ng dá»¥ng
							</p>
						</div>
						<div class="flex justify-end">
							<div class="flex items-center">
								<select
									name="locale"
									id="locale"
									class="rounded border border-gray-400 bg-stone-700 p-2 text-slate-100 hover:border-red-700 hover:bg-stone-800 focus:border-red-700 focus:bg-stone-800 focus:outline-none"
									value={ settings.Locale }
									hx-post={ uri.UpdateSettings() }
									hx-swap="outerHTML"
									hx-target="body"
								>
									<option value="vi" selected?={ settings.Locale == "vi" }>Tiáº¿ng Viá»‡t <span>ðŸ‡»ðŸ‡³</span></option>
									<option value="en" selected?={ settings.Locale == "en" }>English <span>ðŸ‡¬ðŸ‡§</span></option>
								</select>
							</div>
						</div>
					</div>
				</div>
				<div class="mt-4 border-b border-gray-400">
					<div class="my-4 grid grid-cols-2">
						<div>
							<h2 class="text-lg font-semibold leading-4">Data Directory</h2>
							<p class="">
								Lorem ipsum dolor, sit amet consectetur adipisicing elit.
							</p>
							<p class="italic">{ settings.DataDir }</p>
						</div>
						<div class="flex justify-end">
							<div class="flex items-center">
								<button
									class="rounded-sm bg-red-600 px-4 py-2 text-slate-100 shadow-md shadow-stone-900 hover:bg-red-700"
								>
									Change
								</button>
							</div>
						</div>
					</div>
				</div>
				<div class="mt-4 border-b border-gray-400">
					<div class="my-4 grid grid-cols-2">
						<div>
							<h2 class="text-lg font-semibold leading-4">
								Delete after closed
							</h2>
							<p class="">
								Lorem ipsum dolor, sit amet consectetur adipisicing elit.
							</p>
						</div>
						<div class="flex justify-end">
							<div class="flex items-center">
								<label class="relative inline-flex cursor-pointer items-center">
									<input
										name="deleteAfterClosed"
										id="deleteAfterClosed"
										type="checkbox"
										class="peer sr-only"
										checked?={ settings.DeleteAfterClosed }
										hx-post={ uri.UpdateSettings() }
										hx-swap="outerHTML"
										hx-target="body"
                                        hx-include="[name=deleteAfterClosed]"
									/>
									<div
										class="peer h-7 w-14 rounded-full border-gray-600 bg-stone-700 after:absolute after:start-[4px] after:top-0.5 after:h-6 after:w-6 after:rounded-full after:border after:border-gray-300 after:bg-white after:transition-all after:content-[''] peer-checked:bg-red-700 peer-checked:after:translate-x-full peer-checked:after:border-white peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-gray-500 rtl:peer-checked:after:-translate-x-full"
									></div>
                                    <input type="hidden" name="deleteAfterClosed" value="false" />
								</label>
							</div>
						</div>
					</div>
				</div>
			</div>
		</main>
	}
}
